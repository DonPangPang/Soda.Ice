@inject BlogApiService BlogApiService

@foreach (var item in Blogs)
{
    <BlogListItem IsLeft="index%2==1" Blog="item"></BlogListItem>
    index++;
}
<div class="text-center">
    <MPagination @bind-Value="Page"
                 Length="@Blogs.TotalPages"
                 TotalVisible="7" OnInput="ChangePageHandler"></MPagination>
</div>

@code {
    int Page = 1;
    int index = 0;

    VPagedList<VBlog> Blogs = new()
    {

    };
    BlogParameters BlogParameters = new BlogParameters()
        {
            OrderBy = $"{nameof(VBlog.CreateTime)} desc"
        };

    async Task ChangePageHandler()
    {
        await GetBlogsAsync();
    }

    async Task GetBlogsAsync()
    {
        // BlogParameters.Page = Page;
        // Blogs = await BlogApiService.GetList(BlogParameters);
    }

    protected override async Task OnInitializedAsync()
    {
        await GetBlogsAsync();

        foreach (var i in Enumerable.Range(1, 10))
        {
            Blogs.Add(new()
                {
                    Id = Guid.NewGuid(),
                    Title = "这是一个测试标题",
                    Content = "这是一个测试内容这是一个测试内容这是一个测试内容这是一个测试内容这是一个测试内容这是一个测试内容这是一个测试内容这是一个测试内容这是一个测试内容这是一个测试内容这是一个测试内容",
                });
        }

        await base.OnInitializedAsync();
    }
}
